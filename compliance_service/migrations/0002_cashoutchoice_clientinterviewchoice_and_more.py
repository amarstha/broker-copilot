# Generated by Django 5.0.6 on 2024-07-31 11:44

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('compliance_service', '0001_initial'),
        ('opportunity_app', '0009_contactsopportunity_citizenship'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CashOutChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=100, unique=True)),
                ('label', models.TextField(blank=True, help_text='Description or label for the cash out type.')),
            ],
        ),
        migrations.CreateModel(
            name='ClientInterviewChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=100, unique=True)),
                ('label', models.TextField(blank=True, help_text='Description or label for the interview type.')),
            ],
        ),
        migrations.CreateModel(
            name='DocumentIdentificationChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=100, unique=True)),
                ('label', models.TextField(blank=True, help_text='Description or label for the identification method.')),
            ],
        ),
        migrations.CreateModel(
            name='FrequencyChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=100, unique=True)),
                ('label', models.TextField(blank=True, help_text='Description or label for the frequency type.')),
            ],
        ),
        migrations.CreateModel(
            name='LenderChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=100, unique=True)),
                ('label', models.TextField(blank=True, help_text='Description or label for the  loan lender type.')),
            ],
        ),
        migrations.CreateModel(
            name='LoanStructureChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=100, unique=True)),
                ('label', models.TextField(blank=True, help_text='Description or label for the  loan structure type.')),
            ],
        ),
        migrations.CreateModel(
            name='RateChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=100, unique=True)),
                ('label', models.TextField(blank=True, help_text='Description or label for the rate type.')),
            ],
        ),
        migrations.CreateModel(
            name='RepaymentChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=100, unique=True)),
                ('label', models.TextField(blank=True, help_text='Description or label for the repayment type.')),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('credit_guide_provided', models.DateTimeField(blank=True, null=True)),
                ('estimated_settlement_date', models.DateTimeField(blank=True, null=True)),
                ('facility_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('offset', models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No')], max_length=3, null=True)),
                ('loan_objective_note', models.TextField(blank=True, null=True)),
                ('loan_requirement_note', models.TextField(blank=True, null=True)),
                ('loan_circumstances_note', models.TextField(blank=True, null=True)),
                ('loan_financial_awareness_note', models.TextField(blank=True, null=True)),
                ('loan_structure_note', models.TextField(blank=True, null=True)),
                ('loan_prioritised_note', models.TextField(blank=True, null=True)),
                ('lender_loan_note', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cash_out_involved', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='compliance_service.cashoutchoice')),
                ('client_interview_method', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='compliance_service.clientinterviewchoice')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_compliance_note', to=settings.AUTH_USER_MODEL)),
                ('document_identification_method', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='compliance_service.documentidentificationchoice')),
                ('loan_scenario_lender_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notes_for_lender_1', to='compliance_service.lenderchoice')),
                ('loan_scenario_lender_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notes_for_lender_2', to='compliance_service.lenderchoice')),
                ('loan_scenario_lender_3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notes_for_lender_3', to='compliance_service.lenderchoice')),
                ('loan_structure', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='compliance_service.loanstructurechoice')),
                ('opportunity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='compliance_opportunities', to='opportunity_app.opportunity')),
                ('repayment_frequency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='compliance_service.frequencychoice')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_compliance_note', to=settings.AUTH_USER_MODEL)),
                ('rate_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='compliance_service.ratechoice')),
                ('repayment_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='compliance_service.repaymentchoice')),
            ],
        ),
    ]
